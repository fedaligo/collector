spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/collector}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:test}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}
server.port=5000

spring.security.oauth2.client.registration.google.client-id=216689265983-ddt303eoe72nq4ab7uf7rpvnnshrqn62.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-Secret=79vUdesbbYaOcekXSbFmm8Hg
spring.security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.clientAuthenticationScheme=form
spring.security.oauth2.client.scope=openid,email,profile
spring.security.oauth2.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.resource.preferTokenInfo=true

spring.security.oauth2.resourceserver.jwt.issuer-uri = http://localhost:8083/auth/realms/baeldung
spring.security.oauth2.resourceserver.jwt.jwk-set-uri = http://localhost:8083/auth/realms/baeldung/protocol/openid-connect/certs

tokenset.secret: secret
tokenset.expire: 3600000 
# 60 min (1000*60*60)
